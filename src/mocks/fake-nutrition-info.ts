import { NutritionInfoListItem, NutritionInfoDetail, ServingUnit, FoodCategory } from '@/types/nutrition';
import { PagedDataResponse } from '@/types/response-types';

export const mockNutritionInfoList: NutritionInfoListItem[] = [
    {
        id: 1,
        name: "Grilled Chicken Breast",
        servingSize: 100,
        servingUnit: ServingUnit.Grams,
        foodCategory: FoodCategory.Proteins,
        caloriesPerServing: 165,
        totalFat: 3.6,
        protein: 31,
        carbohydrates: 0,
        fiber: 0,
        sugars: 0,
        sodium: 74,
        tenantId: 1
    },
    {
        id: 2,
        name: "Brown Rice",
        servingSize: 100,
        servingUnit: ServingUnit.Grams,
        foodCategory: FoodCategory.Grains,
        caloriesPerServing: 111,
        totalFat: 0.9,
        protein: 2.6,
        carbohydrates: 23,
        fiber: 1.8,
        sugars: 0.4,
        sodium: 5,
        tenantId: 1
    },
    {
        id: 3,
        name: "Greek Yogurt",
        servingSize: 170,
        servingUnit: ServingUnit.Grams,
        foodCategory: FoodCategory.Dairy,
        caloriesPerServing: 100,
        totalFat: 0.7,
        protein: 17,
        carbohydrates: 6,
        fiber: 0,
        sugars: 6,
        sodium: 63,
        tenantId: 1
    },
    {
        id: 4,
        name: "Broccoli",
        servingSize: 91,
        servingUnit: ServingUnit.Grams,
        foodCategory: FoodCategory.Vegetables,
        caloriesPerServing: 31,
        totalFat: 0.4,
        protein: 2.5,
        carbohydrates: 6,
        fiber: 2.4,
        sugars: 1.5,
        sodium: 30,
        tenantId: 1
    },
    {
        id: 5,
        name: "Apple",
        servingSize: 182,
        servingUnit: ServingUnit.Grams,
        foodCategory: FoodCategory.Fruits,
        caloriesPerServing: 95,
        totalFat: 0.3,
        protein: 0.5,
        carbohydrates: 25,
        fiber: 4.4,
        sugars: 19,
        sodium: 2,
        tenantId: 1
    }
];

export const mockNutritionInfoDetails: NutritionInfoDetail[] = [
    {
        id: 1,
        name: "Grilled Chicken Breast",
        servingSize: 100,
        servingUnit: ServingUnit.Grams,
        foodCategory: FoodCategory.Proteins,
        totalCalories: 165,
        caloriesPerServing: 165,
        totalFat: 3.6,
        carbohydrates: 0,
        protein: 31,
        fiber: 0,
        addedSugars: 0,
        sugars: 0,
        saturatedFat: 1.1,
        transFat: 0,
        cholesterol: 85,
        sodium: 74,
        potassium: 256,
        vitaminA: 0.6,
        vitaminB: 0.4,
        vitaminC: 0,
        vitaminD: 0.1,
        calcium: 15,
        iron: 1.3,
        tenantId: 1,
        createdAt: new Date("2024-02-01T10:00:00Z"),
        lastModifiedAt: new Date("2024-02-01T10:00:00Z")
    },
    {
        id: 2,
        name: "Brown Rice",
        servingSize: 100,
        servingUnit: ServingUnit.Grams,
        foodCategory: FoodCategory.Grains,
        totalCalories: 111,
        caloriesPerServing: 111,
        totalFat: 0.9,
        carbohydrates: 23,
        protein: 2.6,
        fiber: 1.8,
        addedSugars: 0,
        sugars: 0.4,
        saturatedFat: 0.2,
        transFat: 0,
        cholesterol: 0,
        sodium: 5,
        potassium: 79,
        vitaminA: 0,
        vitaminB: 0.1,
        vitaminC: 0,
        vitaminD: 0,
        calcium: 10,
        iron: 0.5,
        tenantId: 1,
        createdAt: new Date("2024-02-02T10:00:00Z"),
        lastModifiedAt: new Date("2024-02-02T10:00:00Z")
    },
    {
        id: 3,
        name: "Greek Yogurt",
        servingSize: 170,
        servingUnit: ServingUnit.Grams,
        foodCategory: FoodCategory.Dairy,
        totalCalories: 100,
        caloriesPerServing: 100,
        totalFat: 0.7,
        carbohydrates: 6,
        protein: 17,
        fiber: 0,
        addedSugars: 0,
        sugars: 6,
        saturatedFat: 0.4,
        transFat: 0,
        cholesterol: 10,
        sodium: 63,
        potassium: 240,
        vitaminA: 1.2,
        vitaminB: 0.4,
        vitaminC: 0,
        vitaminD: 0,
        calcium: 200,
        iron: 0,
        tenantId: 1,
        createdAt: new Date("2024-02-03T10:00:00Z"),
        lastModifiedAt: new Date("2024-02-03T10:00:00Z")
    },
    {
        id: 4,
        name: "Broccoli",
        servingSize: 91,
        servingUnit: ServingUnit.Grams,
        foodCategory: FoodCategory.Vegetables,
        totalCalories: 31,
        caloriesPerServing: 31,
        totalFat: 0.4,
        carbohydrates: 6,
        protein: 2.5,
        fiber: 2.4,
        addedSugars: 0,
        sugars: 1.5,
        saturatedFat: 0,
        transFat: 0,
        cholesterol: 0,
        sodium: 30,
        potassium: 288,
        vitaminA: 567,
        vitaminB: 0.2,
        vitaminC: 81,
        vitaminD: 0,
        calcium: 47,
        iron: 0.7,
        tenantId: 1,
        createdAt: new Date("2024-02-04T10:00:00Z"),
        lastModifiedAt: new Date("2024-02-04T10:00:00Z")
    },
    {
        id: 5,
        name: "Apple",
        servingSize: 182,
        servingUnit: ServingUnit.Grams,
        foodCategory: FoodCategory.Fruits,
        totalCalories: 95,
        caloriesPerServing: 95,
        totalFat: 0.3,
        carbohydrates: 25,
        protein: 0.5,
        fiber: 4.4,
        addedSugars: 0,
        sugars: 19,
        saturatedFat: 0.1,
        transFat: 0,
        cholesterol: 0,
        sodium: 2,
        potassium: 195,
        vitaminA: 98,
        vitaminB: 0.1,
        vitaminC: 8.4,
        vitaminD: 0,
        calcium: 11,
        iron: 0.2,
        tenantId: 1,
        createdAt: new Date("2024-02-05T10:00:00Z"),
        lastModifiedAt: new Date("2024-02-05T10:00:00Z")
    }
];

export const getMockPagedNutritionInfoResponse = (
    pageNumber: number = 1,
    pageSize: number = 10
): PagedDataResponse<NutritionInfoListItem> => {
    const startIndex = (pageNumber - 1) * pageSize;
    const endIndex = startIndex + pageSize;
    const items = mockNutritionInfoList.slice(startIndex, endIndex);

    return {
        items,
        totalCount: mockNutritionInfoList.length,
        pageNumber,
        pageSize,
        totalPages: Math.ceil(mockNutritionInfoList.length / pageSize),
        hasPreviousPage: pageNumber > 1,
        hasNextPage: endIndex < mockNutritionInfoList.length
    };
};

export const getMockNutritionInfoDetail = (id: number): NutritionInfoDetail | undefined => {
    return mockNutritionInfoDetails.find(item => item.id === id);
};
